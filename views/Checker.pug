extends base  

block content 

  section#checker.checker
    .padding1
      h3.tertiary-heading Contrast checker
      .checker-section.grid2
        .main-checker
          .checker-right
            .background-color-box.flex
              p.para-text1 Background:
              // <div class="color-1">#000000</div>
              button#btn1.show-modal(onclick='button1()')
                i.fas.fa-neuter
              .modal.hidden
                .color-picker.sub
                  button.close-modal &times;
                  canvas#color-block(height='150' width='150')
                  canvas#color-strip(height='150' width='30')
                  input#myRange(type='range' min='1' max='100' value='50')
                  span#slider-input 50
            .font-color-box.flex
              p.para-text2 Fonts:
              // <span class="color-2">#000000</span>
              button#btn2.show-modal(onclick='button2()')
                i.fas.fa-neuter
              .modal.hidden
                .color-picker.sub
                  button.close-modal &times;
                  canvas#color-block(height='150' width='150')
                  canvas#color-strip(height='150' width='30')
                  input(type='range' min='1' max='100' value='50')
            .contrast-box.flex
              .flex3
                p Normal text
                p
                  | AA : 
                  span Pass &#x1F600;
                p
                  | AAA : 
                  span Fail &#x1F610;
              .flex3
                p Larger text
                p
                  | AA : 
                  span Fail &#x1F610;
                p
                  | AAA : 
                  span Pass &#x1F600;
        .checker-left.flex4
          h3.left-heading Engineer&apos;s Quote
          p.left-para
            | A good scientist is a person with original ideas. A good engineer
            | is a person who makes a design that works with as few original
            | ideas as possible. There are no prima donnas in engineering.
          p.left-author.mul -Freemon Byson

  script(text='text/javascript').
    'use strict';
    let btn1 = 0;
    let btn2 = 0;
    function button1(e) {
    btn1 = 1;
    }
    function button2(e) {
    btn1 = 0;
    }
    /////////////////////
    ///PICKER SECTION ///
    /////////////////////
    var colorBlock = document.getElementById('color-block');
    var ctx1 = colorBlock.getContext('2d');
    var width1 = colorBlock.width;
    var height1 = colorBlock.height;
    var colorStrip = document.getElementById('color-strip');
    var ctx2 = colorStrip.getContext('2d');
    var width2 = colorStrip.width;
    var height2 = colorStrip.height;
    var colorLabel = document.querySelector('.checker-left');
    var x = 0;
    var y = 0;
    var drag = false;
    var rgbaColor = '#1a759f';
    ctx1.rect(0, 0, width1, height1);
    fillGradient();
    ctx2.rect(0, 0, width2, height2);
    var grd1 = ctx2.createLinearGradient(0, 0, 0, height1);
    grd1.addColorStop(0, 'rgba(255, 0, 0, 1)');
    grd1.addColorStop(0.17, 'rgba(255, 255, 0, 1)');
    grd1.addColorStop(0.34, 'rgba(0, 255, 0, 1)');
    grd1.addColorStop(0.51, 'rgba(0, 255, 255, 1)');
    grd1.addColorStop(0.68, 'rgba(0, 0, 255, 1)');
    grd1.addColorStop(0.85, 'rgba(255, 0, 255, 1)');
    grd1.addColorStop(1, 'rgba(255, 0, 0, 1)');
    ctx2.fillStyle = grd1;
    ctx2.fill();
    function click(e) {
    x = e.offsetX;
    y = e.offsetY;
    var imageData = ctx2.getImageData(x, y, 1, 1).data;
    rgbaColor =
    'rgba(' + imageData[0] + ',' + imageData[1] + ',' + imageData[2] + ',1)';
    fillGradient();
    }
    function fillGradient() {
    ctx1.fillStyle = rgbaColor;
    ctx1.fillRect(0, 0, width1, height1);
    var grdWhite = ctx2.createLinearGradient(0, 0, width1, 0);
    grdWhite.addColorStop(0, 'rgba(255,255,255,1)');
    grdWhite.addColorStop(1, 'rgba(255,255,255,0)');
    ctx1.fillStyle = grdWhite;
    ctx1.fillRect(0, 0, width1, height1);
    var grdBlack = ctx2.createLinearGradient(0, 0, 0, height1);
    grdBlack.addColorStop(0, 'rgba(0,0,0,0)');
    grdBlack.addColorStop(1, 'rgba(0,0,0,1)');
    ctx1.fillStyle = grdBlack;
    ctx1.fillRect(0, 0, width1, height1);
    }
    function mousedown(e) {
    drag = true;
    changeColor(e);
    }
    function mousemove(e) {
    if (drag) {
    changeColor(e);
    }
    }
    function mouseup(e) {
    drag = false;
    }
    function changeColor(e) {
    x = e.offsetX;
    y = e.offsetY;
    var imageData = ctx1.getImageData(x, y, 1, 1).data;
    var rgbaColor =
    'rgba(' + imageData[0] + ',' + imageData[1] + ',' + imageData[2] + ',1)';
    // var hex = rgba2hex('rgbaColor');
    if (btn1 === 1) {
    document.querySelector('.checker-left').style.backgroundColor = rgbaColor;
    } else {
    document.querySelector('.left-heading').style.color = rgbaColor;
    document.querySelector('.left-para').style.color = rgbaColor;
    document.querySelector('.left-author').style.color = rgbaColor;
    }
    }
    colorStrip.addEventListener('click', click, false);
    colorBlock.addEventListener('mousedown', mousedown, false);
    colorBlock.addEventListener('mouseup', mouseup, false);
    colorBlock.addEventListener('mousemove', mousemove, false);
    const modal = document.querySelector('.modal');
    // const overlay = document.querySelector('.overlay');
    const btnsshowModal = document.querySelectorAll('.show-modal');
    const btnscloseModal = document.querySelector('.close-modal');
    const openModal = function () {
    modal.classList.remove('hidden');
    };
    const closeModal = function () {
    modal.classList.add('hidden');
    };
    for (let i = 0; i < btnsshowModal.length; i++) {
    document;
    btnsshowModal[i].addEventListener('click', openModal);
    btnscloseModal.addEventListener('click', closeModal);
    document.addEventListener('keydown', function (e) {
    if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
    closeModal();
    }
    });
    }
    var slider = document.getElementById('myRange');
    slider.oninput = function () {
    document.getElementById('slider-input').textContent = this.value;
    };
